dbcut.com -> 이걸 들어가서 웹페이지로 이어지는 걸 봐보고 메인페이지 / 스크롤 할 때마다 효과, 다양한 ui효과들을 보면서
	서브 페이지도 어떠한 특징을 가지고 있는지 서핑해서 눈을 높여보면서 디자인 감각을 늘리는 루틴 (틈날 때 마다)

figma.com -> 중요한 UI/UX툴
		시작과 끝은 프레임이다 -> 네모 왼쪽에 있는 툴
		면과 선의 속성을 가지고 있다 / 프레임에 clip content를 누르면 모양이 짤리지 않음
		기본적으로 클라우드에서 돌아감 어디에 가던 인터넷만 연결되어있고, 계정만들어가면 좋다.
		+오토 레이아웃 -> 레이아웃과 배치가 매우 중요하다!

fonts.google.com -> 자주 가게될 사이트 (타이포 그래피 / 폰트 등등)
			한글을 쓸 때는 pretendard를 쓰자... 제발 (나중에 프로젝트 중반쯤가서 마음대로 해보자)
			타이포그래피를 모르겠다면? 이걸 고려해보자 -> Helvetica(헬베티카) -> 가독성이 좋고 질리지 않아
				디자이너들이 이 폰드를 선택했다. (+단정한느낌)
			꿀뷰

Desktop web app -> 로컬 폰트사용가능 여기서는 예를 들어서 pretendard 같은거 다운로드 받아서 figma앱을 다시 껏다가 켜면 
			선택이 가능하다.

컴포넌트 기능


* block vs inline 
- (대부분의) 요소는 블록과 인라인으로 구별된다.
- 블록요소는 가로 한 줄을 다 차지
-> 부모의 가로 크기 100%를 상속(기본값) / 인라인 : 콘텐츠의 값
- 세로의 크기는 자손의 합 (블록/인라인 공통)


- 인라인요소는 여유가 있을 경우, 옆자리를 다른 요소에 양보
- 오직! 블록만 크기와 여백을 가진다.
- padding, border(테두리)은/는 크기에 영향을 준다. (크기를 늘린다.)
-> 무조건 width, height로만 그리게 하려면 bxbb단축기를 이용해서 box-sizing : border-box를 만든다.

- 블록요소의 가운데 정렬은, width 부여 후 margin: 0 auto;
- 블록이 감싸는 인라인 요소, 인라인 텍스트를 가운데로 보내려면 text-align: center

* 플렉스 박스 
- 배치하려는 요소의 부모에게 display: flex 적용
- 인라인 요소처럼 가로가 쪼그라 들지만, 여전히 불록이다.
- 세로 크기는 부모공간(flex)의 세로 크기 기준 100% -> stretch

- 부모 공간이 flex가 되면 메인축이 가로로 생겨남
- 아이템은 그 메인축으로 자동정렬

prettier -> 자동 줄바꿈 프로그램
설치하고 Default Formatter에서 Prettie - Code formatter설치하고 Format On Save Mode를 체크한다.

Xhtml방식인데 딱히 상관없으니까 그냥 놔두고
react.js라이브러리 유명하니까 나중에 참고하자.

*position
- static, relative, absolute, fixxed, sticky
- 모든 요소는 position: static <- 기본값
- position: absolute를 적용하면 원래 자기 위치를 기준으로 3차원으로 뜬다.
-> 원하는 좌표값을 설정해서 쓰자! (정확하게 띄우기 위함 -> top, right, bottom, left)
-> 이 때, 직계 조상에 기준점 역할을 하는 세팅이 없으면 viewport를 기준으로 한다.